syntax = "proto3";

package rust_ecom;

message Empty {}

message StringPair {
  string key = 1;
  string value = 2;
}

message Product {
  int32 product_id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  double created_at = 5;
}

message Order {
  int32 order_id = 1;
  int32 user_id = 2;
  repeated int32 products = 3;
  double total = 4;
  string status = 5;
  double created_at = 6;
}

message AdminAccount {
  int32 admin_id = 1;
  string username = 2;
  string password = 3;
  string email = 4;
  double created_at = 5;
}

message UserAccount {
  int32 user_id = 1;
  string username = 2;
  string password = 3;
  string email = 4;
  double created_at = 5;
  repeated int32 products = 6;
  repeated int32 orders = 7;
}

message GetProductsResponse { repeated Product products = 1; }

message GetProductRequest { int32 product_id = 1; }
message GetProductResponse { Product product = 1; }

message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
}
message CreateProductResponse { Product product = 1; }

message UpdateProductRequest {
  int32 product_id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
}
message UpdateProductResponse { Product product = 1; }

message DeleteProductRequest { int32 product_id = 1; }
message DeleteProductResponse { Product product = 1; }

message GetOrdersRequest {}
message GetOrdersResponse { repeated Order orders = 1; }

message GetOrderRequest { int32 order_id = 1; }
message GetOrderResponse { Order order = 1; }

message UpdateOrderRequest {
  int32 order_id = 1;
  int32 user_id = 2;
  repeated int32 products = 3;
  double total = 4;
  string status = 5;
}
message UpdateOrderResponse { Order order = 1; }

message DeleteOrderRequest { int32 order_id = 1; }
message DeleteOrderResponse { Order order = 1; }

message GetAdminAccountsResponse {
  repeated GetAdminAccountResponse accounts = 1;
}

message GetAdminAccountRequest { int32 admin_id = 1; }
message GetAdminAccountResponse {
  int32 admin_id = 1;
  string username = 2;
  string email = 3;
  double created_at = 4;
}

message CreateAdminAccountRequest {
  string username = 1;
  string password = 2;
  string email = 3;
}
message CreateAdminAccountResponse { GetAdminAccountResponse account = 1; }

message UpdateAdminAccountRequest {
  int32 admin_id = 1;
  string username = 2;
  string password = 3;
  string email = 4;
}
message UpdateAdminAccountResponse { GetAdminAccountResponse account = 1; }

message DeleteAdminAccountRequest { int32 admin_id = 1; }
message DeleteAdminAccountResponse { GetAdminAccountResponse account = 1; }

message GetUserAccountsResponse {
  repeated GetUserAccountResponse accounts = 1;
}

message GetUserAccountRequest { int32 user_id = 1; }
message GetUserAccountResponse {
  int32 user_id = 1;
  string username = 2;
  string email = 3;
  double created_at = 4;
  repeated int32 products = 5;
  repeated int32 orders = 6;
}

message CreateUserAccountRequest {
  string username = 1;
  string password = 2;
  string email = 3;
}
message CreateUserAccountResponse { GetUserAccountResponse account = 1; }

message UpdateUserAccountRequest {
  int32 user_id = 1;
  string username = 2;
  string password = 3;
  string email = 4;
}
message UpdateUserAccountResponse { GetUserAccountResponse account = 1; }

message DeleteUserAccountRequest { int32 user_id = 1; }
message DeleteUserAccountResponse { GetUserAccountResponse account = 1; }

message AddToCartRequest {
  int32 product_id = 1;
  int32 user_id = 2;
}
message RemoveFromCartRequest {
  int32 product_id = 1;
  int32 user_id = 2;
}

message CheckoutRequest { repeated int32 products = 1; }
message CheckoutResponse { Order order = 1; }

service Storefront {
  // Products

  rpc GetProducts(Empty) returns (GetProductsResponse);
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);

  // Accounts

  rpc CreateUserAccount(CreateUserAccountRequest)
      returns (CreateUserAccountResponse);
}

service Admin {
  // Products

  rpc GetProducts(Empty) returns (GetProductsResponse);
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);

  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);

  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);

  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);

  // Orders

  rpc GetOrders(Empty) returns (GetOrdersResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);

  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);

  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);

  // Admin Accounts

  rpc GetAdminAccounts(Empty) returns (GetAdminAccountsResponse);
  rpc GetAdminAccount(GetAdminAccountRequest) returns (GetAdminAccountResponse);

  rpc CreateAdminAccount(CreateAdminAccountRequest)
      returns (CreateAdminAccountResponse);

  // Admin Account

  rpc UpdateAdminAccount(UpdateAdminAccountRequest)
      returns (UpdateAdminAccountResponse);

  rpc DeleteAdminAccount(DeleteAdminAccountRequest)
      returns (DeleteAdminAccountResponse);

  // User Accounts

  rpc GetUserAccounts(Empty) returns (GetUserAccountsResponse);
  rpc GetUserAccount(GetUserAccountRequest) returns (GetUserAccountResponse);

  rpc CreateUserAccount(CreateUserAccountRequest)
      returns (CreateUserAccountResponse);

  rpc DeleteUserAccount(DeleteUserAccountRequest)
      returns (DeleteUserAccountResponse);

  rpc GetProductsByUser(GetUserAccountRequest) returns (GetProductsResponse);
  rpc GetOrdersByUser(GetUserAccountRequest) returns (GetOrdersResponse);
}

service User {
  //  User Account

  rpc GetUserAccount(Empty) returns (GetUserAccountResponse);

  rpc UpdateUserAccount(UpdateUserAccountRequest)
      returns (UpdateUserAccountResponse);

  rpc DeleteUserAccount(DeleteUserAccountRequest)
      returns (DeleteUserAccountResponse);

  // Products

  rpc AddProductToCart(AddToCartRequest) returns (GetProductResponse);

  rpc RemoveProductFromCart(RemoveFromCartRequest) returns (GetProductResponse);

  rpc Checkout(CheckoutRequest) returns (CheckoutResponse);

  rpc GetProducts(GetUserAccountRequest) returns (GetProductsResponse);
  rpc GetOrders(GetUserAccountRequest) returns (GetOrdersResponse);
}
